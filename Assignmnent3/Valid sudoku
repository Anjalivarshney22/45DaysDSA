class Solution {
    public boolean isValidSudoku(char[][] board) {
        // Check each row
        for (int i = 0; i < 9; i++) {
            boolean[] vis = new boolean[9];
            for (int j = 0; j < 9; j++) {
                if (board[i][j] != '.') {
                    int num = board[i][j] - '1'; 
                    if (vis[num]) {
                        return false; 
                    }
                    vis[num] = true;
                }
            }
        }
        
        // Check each column
        for (int j = 0; j < 9; j++) {
            boolean[] vis = new boolean[9];
            for (int i = 0; i < 9; i++) {
                if (board[i][j] != '.') {
                    int num = board[i][j] - '1'; 
                    if (vis[num]) {
                        return false;
                    }
                    vis[num] = true;
                }
            }
        }
        
        // Check each 3x3 sub-box
        for (int k = 0; k < 9; k++) {
            boolean[] vis = new boolean[9];
            int r = 3 * (k / 3);
            int c = 3 * (k % 3);
            for (int i = r; i < r + 3; i++) {
                for (int j = c; j < c + 3; j++) {
                    if (board[i][j] != '.') {
                        int num = board[i][j] - '1';
                        if (vis[num]) {
                            return false; 
                        }
                        vis[num] = true;
                    }
                }
            }
        }
        
        return true;
    }
}
