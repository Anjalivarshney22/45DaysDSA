class Solution {
    public List<Boolean> checkArithmeticSubarrays(int[] nums, int[] l, int[] r) { 
    ArrayList<Boolean> ans = new ArrayList<>(); 
        for (int i = 0; i < l.length; i++) {
            int start = l[i];
            int end = r[i];
            int[] sub = new int[end - start + 1];
            for (int j = start; j <= end; j++) {
                sub[j - start] = nums[j];
            }
            sort(sub, end - start + 1);
            if (isDiff(sub, end - start + 1)) {
                ans.add(true);
            } else {
                ans.add(false);
            }
        }
        
        return ans;
    }
    
    static void sort(int[] nums, int length) {
        for (int i = 1; i < length; i++) {
            int j = i;
            while (j > 0 && nums[j - 1] > nums[j]) {
                int temp = nums[j];
                nums[j] = nums[j - 1];
                nums[j - 1] = temp;
                j--;
            }
        }
    }
    
    public static boolean isDiff(int[] sub, int length) {
        if (length < 2) {
            return false;
        }
        int dif = sub[1] - sub[0];
        for (int i = 2; i < length; i++) {
            if (sub[i] - sub[i - 1] != dif) {
                return false;
            }
        }
        return true;
    }
}
