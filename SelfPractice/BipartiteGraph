class Solution {
  public boolean isBipartite(int[][] graph) {
    int[] color = new int[graph.length];
    for (int i = 0; i < color.length; i++) {
      color[i] = -1;
    }

    Queue<Integer> q = new LinkedList<>();
    for (int i = 0; i < graph.length; i++) {
      if (color[i] == -1) {
        q.add(i);
        color[i] = 0;
          while (!q.isEmpty()) {
          int cur = q.poll();
          for (int nbr : graph[cur]) {
            if (color[nbr] == -1) {
              color[nbr] = color[cur] == 0 ? 1 : 0;
              q.add(nbr);
            } else if (color[nbr] == color[cur]) {
              return false;
            }
          }
        }
      }
    }
    return true;
  }
}
